"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const dotenv_safe_1 = __importDefault(require("dotenv-safe"));
const express_1 = __importDefault(require("express"));
const users_1 = __importDefault(require("./routes/users"));
const auths_1 = __importDefault(require("./routes/auths"));
const groups_1 = __importDefault(require("./routes/groups"));
const cors_1 = __importDefault(require("cors"));
const body_parser_1 = __importDefault(require("body-parser"));
const cookie_parser_1 = __importDefault(require("cookie-parser"));
const sessions_1 = __importDefault(require("./middleware/sessions"));
const usersGroups_1 = __importDefault(require("./routes/usersGroups"));
const invoices_1 = __importDefault(require("./routes/invoices"));
const usersInvoices_1 = __importDefault(require("./routes/usersInvoices"));
const notifications_1 = __importDefault(require("./routes/notifications"));
const languages_1 = __importDefault(require("./routes/languages"));
const invoiceFolders_1 = __importDefault(require("./routes/invoiceFolders"));
dotenv_safe_1.default.config();
const app = (0, express_1.default)();
const userRoutes = new users_1.default();
const authRoutes = new auths_1.default();
const groupRoutes = new groups_1.default();
const usersGroupRoutes = new usersGroups_1.default();
const invoiceRoutes = new invoices_1.default();
const userInvoicesRoutes = new usersInvoices_1.default();
const notificationRoutes = new notifications_1.default();
const languageRoutes = new languages_1.default();
const invoiceFoldersRoutes = new invoiceFolders_1.default();
app.use((0, cors_1.default)());
app.use(body_parser_1.default.json());
app.use((0, cookie_parser_1.default)());
app.use(sessions_1.default);
app.use("/users", userRoutes.userRoutes());
app.use("/auth", authRoutes.authsRoutes());
app.use("/groups", groupRoutes.groupRoutes());
app.use("/users-groups", usersGroupRoutes.usersGroupsRoutes());
app.use("/invoices", invoiceRoutes.invoicesRoutes());
app.use("/users-invoices", userInvoicesRoutes.userInvoicesRoutes());
app.use("/notifications", notificationRoutes.notificationsRoutes());
app.use("/language", languageRoutes.languageRoutes());
app.use("/invoice-folders", invoiceFoldersRoutes.invoiceFoldersRoutes());
app.listen(process.env.SERVER_PORT, () => {
    console.log("Server is working");
});
